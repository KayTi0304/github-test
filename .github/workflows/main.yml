# This is a basic workflow to help you get started with Actions
name: Update Lambda on AWS - DEV

# Controls when the action will run. Invokes the workflow on push events but only for the main branch
on: 
  workflow_dispatch:

# Permission can be added at job level or workflow level    
permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout
jobs:
 deploy:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: us-east-1 # Set your region

      - name: Assume Role
        run: |
          aws sts assume-role \
            --role-arn "arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GithubAssumeLambdaDevRole" \
            --role-session-name github-actions-session \
            --duration-seconds 900 > /tmp/assume-role-output.json

          export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' /tmp/assume-role-output.json)
          export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' /tmp/assume-role-output.json)
          export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' /tmp/assume-role-output.json)

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.16

      - name: Build
        run: GOOS=linux GOARCH=x86_64 go build -o main ./main.go

      - name: Zip the name file
        run: zip main.zip main

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name func2-dev \
            --zip-file main.zip
